{
	"info": {
		"_postman_id": "f1e2d3c4-b5a6-4987-8654-cba987654321",
		"name": "Blockhouse - Market Data Service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Latest Price",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is valid JSON\", function () {",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Body includes required keys\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.all.keys('symbol', 'price', 'timestamp', 'provider');",
							"});",
							"",
							"pm.test(\"Symbol in response matches request\", function () {",
							"    const symbol = pm.request.url.query.get(\"symbol\");",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.symbol).to.eql(symbol);",
							"});",
							"",
							"pm.test(\"Data types are correct\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.symbol).to.be.a('string');",
							"    pm.expect(jsonData.price).to.be.a('number');",
							"    pm.expect(jsonData.timestamp).to.be.a('string');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/prices/latest?symbol=AAPL&provider=yfinance",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"prices",
						"latest"
					],
					"query": [
						{
							"key": "symbol",
							"value": "AAPL"
						},
						{
							"key": "provider",
							"value": "yfinance"
						}
					]
				},
				"description": "Fetches the latest price for a given stock symbol. Bypasses cache by default for easy testing."
			},
			"response": []
		},
		{
			"name": "Poll for Prices",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202 Accepted\", function () {",
							"    pm.response.to.have.status(202);",
							"});",
							"",
							"pm.test(\"Response is valid JSON\", function () {",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Body includes required keys for accepted job\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.all.keys('job_id', 'status', 'config');",
							"});",
							"",
							"pm.test(\"Status is 'accepted'\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('accepted');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"symbols\": [\"GOOG\", \"MSFT\"],\n  \"interval\": 60,\n  \"provider\": \"yfinance\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/prices/poll",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"prices",
						"poll"
					]
				},
				"description": "Submits a job to poll for prices for a list of symbols at a given interval."
			},
			"response": []
		}
	]
}